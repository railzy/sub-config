mixed-port: 7890
allow-lan: false
log-level: info
mode: Rule
# external-controller: '127.0.0.1:9090'
ipv6: true

#【Meta专属】使用geoip.dat数据库(默认：false使用mmdb数据库)
geodata-mode: true         

# 实验性功能
# experimental:
#   ignore-resolve-fail: true # 忽略 DNS 解析失败，默认值为 true
  # interface-name: en0 # outbound interface name

#【Meta专属】sniffer域名嗅探器
sniffer:
  enable: true
  ## 对 redir-host 类型识别的流量进行强制嗅探
  ## 如：Tun、Redir 和 TProxy 并 DNS 为 redir-host 皆属于
  # force-dns-mapping: false
  ## 对所有未获取到域名的流量进行强制嗅探
  # parse-pure-ip: false
  # 是否使用嗅探结果作为实际访问，默认 true
  # 全局配置，优先级低于 sniffer.sniff 实际配置
  override-destination: false
  sniff: # TLS 默认如果不配置 ports 默认嗅探 443
    TLS:
    #  ports: [443, 8443]
    
    # 默认嗅探 80
    HTTP: # 需要嗅探的端口
      
      ports: [80, 8080-8880]
      # 可覆盖 sniffer.override-destination
      override-destination: true
  skip-domain:                   #列表中的sni字段，保留mapping结果，不通过嗅探还原域名
                                 #优先级比force-domain高
    - 'Mijia Cloud'              #米家设备，建议加
    - 'dlg.io.mi.com'
    - '+.apple.com'              #苹果域名，建议加
  # - '*.baidu.com'              #支持通配符
    
  force-domain:                  #需要强制嗅探的域名，默认只对IP嗅探
  # - '+'                        #去掉注释后等于全局嗅探
    - '+.google.com'
    - +.v2ex.com

dns:
  enable: true
  listen: ':5353'
  prefer-h3: true # 开启 DoH 支持 HTTP/3，将并发尝试
  ipv6: true # when the false, response to AAAA questions will be empty

  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - 1.0.0.1
  #   - 8.8.4.4

  # 查询 hosts
  use-hosts: true 

  proxy-server-nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query

  #指定域名使用自定义DNS解析
  nameserver-policy:    
    'blhxstatic.yo-star.com':   'https://dns.alidns.com/dns-query'
    '+.dogfight360.com': 'https://dns.alidns.com/dns-query'
    # '+.cn': 'https://dns.alidns.com/dns-query'
    # steam 检测地区
    '+.cm.steampowered.com': 'https://dns.alidns.com/dns-query'
    '+.steamserver.net': 'https://dns.alidns.com/dns-query'
    '+.xboxlive.cn': 'https://dns.alidns.com/dns-query'
    'fe3cr.delivery.mp.microsoft.com': 'https://dns.alidns.com/dns-query'
    'packagespc.xboxlive.com': 'https://dns.alidns.com/dns-query'
  # 'www.baidu.com': 'https://223.5.5.5/dns-query'
  # '+.internal.crop.com': '114.114.114.114'
  enhanced-mode: redir-host # redir-host (will be deprecated) or fake-ip 
  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR
  # use-hosts: true # lookup hosts and return IP record
  
  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  fake-ip-filter:
    - '*.lan'
    # QQ
    - +.qq.com
    - localhost.ptlogin2.qq.com
    # === Music Service ===
    ## NetEase
    - '+.music.163.com'
    - '*.126.net'
    # Google
    - '+.googleapis.com'
    - '+.googleapis.cn'
    - '+.googletraveladservices.com'
    - '+.google.com'
    - '+.googleusercontent.com'
    # mine
    - '+.ray404.dynv6.net'
    - '+.172333.xyz'

  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    # - tls://dns.rubyfish.cn:853 # DNS over TLS
    - https://dns.alidns.com/dns-query # DNS over HTTPS
    # - "[2400:3200::1]:53"
    - https://doh.pub/dns-query
    # - https://223.5.5.5/dns-query
    # - dhcp://system # 添加系统 DNS，这种写法只在安卓有效
    # - 114.114.114.114 # default value
    # - https://dns.google/dns-query
    # - https://doh.pub/dns-query
    # - https://1.1.1.1/dns-query # DNS over HTTPS
    # - https://rubyfish.cn/dns-query
    # - https://i.233py.com/dns-query


  # When `fallback` is present, the DNS server will send concurrent requests
  # to the servers in this section along with servers in `nameservers`.
  # The answers from fallback servers are used when the GEOIP country
  # is not `CN`.
  # fallback 默认 *直连* 查询，只用于判断 GEOIP 规则和 DIRECT 的连接
  # 只有当 nameservers 结果满足 fallback-filter 的条件，才会使用 fallback 的结果
  # 若判断域名需要代理，域名将被传递到远端服务器重新进行解析和连接
  # 必须使用可以 *直连* 的服务器，否则会出现问题
  # 理论上只要结果能区分是否走代理即可，不要求结果准确
  # 可以考虑速度优先
  fallback:
    # 【Meta专属】
    # 指定 DNS 过代理查询，ProxyGroupName 为策略组名或节点名，过代理配置优先于配置出口网卡，当找不到策略组或节点名则设置为出口网卡
    # - 'https://dns.google/dns-query'
    # - 'https://cloudflare-dns.com/dns-query' # 无法直连，无法使用
    # - "[2001:4860:4860::8888]:53" # Google ipv6 dns
    # - tls://1.0.0.1 # 无法直连，无法使用
    - tls://1.1.1.1 # 可以直连
    # - 1.0.0.1 # 可以直连
    # - 'https://1.0.0.1/dns-query' # 无法直连，无法使用
    # DNS over HTTPS
    - 'https://1.1.1.1/dns-query' # 可以直连
    # - 'https://8.8.4.4/dns-query' # 无法直连，无法使用
    # - tls://8.8.4.4 # 无法直连，无法使用
    # - tls://dns.google # 无法直连，无法使用
    # - tls://8.8.8.8 # 无法直连，无法使用
    # - 1.1.1.1
    # - 8.8.4.4
  # DoH and DoT fallback server not work in scut. Don't use.


  # If IP addresses resolved with servers in `nameservers` are in the specified
  # subnets below, they are considered invalid and results from `fallback`
  # servers are used instead.
  #
  # IP address resolved with servers in `nameserver` is used when
  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.
  #
  # If `fallback-filter.geoip` is false, results from `nameserver` nameservers
  # are always used if not match `fallback-filter.ipcidr`.
  #
  # This is a countermeasure against DNS pollution attacks.
  fallback-filter:
    geoip: true
    geoip-code: CN                   #geoip匹配区域设定
    #【Meta专属】设定geosite某分类使用fallback返回结果
    # 会误伤部分直连网站
    # 例：使用 https://www.gstatic.com/generate_204 测 DIRECT 会 timeout
    # geosite:                         
    #   - gfw
    ipcidr:
      # - 0.0.0.0/8
      # - ::/128
      - 240.0.0.0/4
    domain:
       - '+.google.com'
       - '+.youtube.com'
       - '+.githubusercontent.com'
       - '+.exhentai.org'
       - '+.e-hentai.org'
       - '+.v2ex.com'
       # Google
       - '+.googleapis.com'
       - '+.googleapis.cn'
       - '+.googletraveladservices.com'
       - '+.google.com'
       - '+.googleusercontent.com'
       # mine
       - '+.ray404.dynv6.net'
       - '+.172333.xyz'
